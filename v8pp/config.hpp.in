#ifndef V8PP_CONFIG_HPP_INCLUDED
#define V8PP_CONFIG_HPP_INCLUDED

/// v8pp library version
#define V8PP_VERSION "@PROJECT_VERSION@"
#define V8PP_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define V8PP_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define V8PP_VERSION_PATCH @PROJECT_VERSION_PATCH@

/// v8::Isolate data slot number, used in v8pp for shared data
#if !defined(V8PP_ISOLATE_DATA_SLOT)
#define V8PP_ISOLATE_DATA_SLOT @V8PP_ISOLATE_DATA_SLOT@
#endif

/// v8pp plugin initialization procedure name
#if !defined(V8PP_PLUGIN_INIT_PROC_NAME)
#define V8PP_PLUGIN_INIT_PROC_NAME @V8PP_PLUGIN_INIT_PROC_NAME@
#endif

/// v8pp plugin filename suffix
#if !defined(V8PP_PLUGIN_SUFFIX)
#define V8PP_PLUGIN_SUFFIX "@V8PP_PLUGIN_SUFFIX@"
#endif

#if defined(_MSC_VER)
#define V8PP_EXPORT __declspec(dllexport)
#define V8PP_IMPORT __declspec(dllimport)
#elif __GNUC__ >= 4
#define V8PP_EXPORT __attribute__((__visibility__("default")))
#define V8PP_IMPORT V8PP_EXPORT
#else
#define V8PP_EXPORT
#define V8PP_IMPORT
#endif

#define V8PP_PLUGIN_INIT(isolate) extern "C" V8PP_EXPORT \
v8::Local<v8::Value> V8PP_PLUGIN_INIT_PROC_NAME(isolate)

// This is to suppress the following warning:
//
//   v8pp/plugins/console.cpp:29:1: warning: 'v8pp_module_init' has C-linkage specified, but returns
//     user-defined type 'v8::Local<v8::Value>' which is incompatible with C [-Wreturn-type-c-linkage]
//
// I tried removing the "C" from extern "C" above, but then dlsym in v8pp/context.cpp failed to find
// the import function "v8pp_module_init" due to C++ name mangling.
//
// I'm not sure there's a better solution. All other ideas I can think of have pretty big downsides.
#pragma clang diagnostic ignored "-Wreturn-type-c-linkage"

#ifndef V8PP_HEADER_ONLY
#define V8PP_HEADER_ONLY @V8PP_HEADER_ONLY@
#endif

#if V8PP_HEADER_ONLY
#define V8PP_IMPL inline
#else
#define V8PP_IMPL
#endif

#define V8PP_STRINGIZE(s)  V8PP_STRINGIZE0(s)
#define V8PP_STRINGIZE0(s) #s

#endif // V8PP_CONFIG_HPP_INCLUDED
